TOPICS

HOOKS
- useState, useEffect, useRef, useContext, useReducer...

FORMS
- controlled/uncontrolled inputs, value, FormData API

EXTRA
Context API, prop drilling, custom hooks... 


1. USESTATE Hook

- return an array with two elements: the current state value, and a function use to update the state
- accepts default value as an argument
- state update triggers re-render


Initial Render and Re-Render

In a React application, the initial render is the first time that the component tree is rendered to the DOM. It happens when the application first loads, or when the root component is first rendered. This is also known as "mounting" the components.

Re-renders, on the other hand, happen when the component's state or props change, and the component needs to be updated in the DOM to reflect these changes. React uses a virtual DOM to optimize the process of updating the actual DOM, so that only the necessary changes are made.

2. useEffect

useEffect is a hook  in React that allows you to perfrom side effects in function components. Example of side effects are feteching data ,subscription,directly update the Dom and event listener ,timer ,etc..

--accepts two arguments (second optional)
-first argument-> callback function
-second argument-> dependency array
-by default runs on render (initial or re-render)

Flasy value
0 (Zero),
null,
""(Empty string),
undefined,
NaN(Not a NUmber)

all others values ,including empty object and array,are considerdd trurthy


crete file -05-toggle-challange.jsx
-crete a state vlue  (boolean)
- return a button and a component/elements
-when user click one button
-- toggle state value
-- conition render

=> user challange 
-- file=> 06-user-challange.jsx
-- create use state value  
   user - default value --null
   setUser  
-- crete two function
-login - sets user equal to object with name propert 
-loogout--> set user eqaul to null
-- in jsx use? to display two diffrents setups


-h1 with hello there,username 
-h1 with please login and login button

